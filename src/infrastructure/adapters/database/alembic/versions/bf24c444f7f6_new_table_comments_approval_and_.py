"""new table comments approval and relationship product-company

Revision ID: bf24c444f7f6
Revises: 79229af6d3be
Create Date: 2022-11-23 17:28:30.444083

"""
from alembic import op
import sqlalchemy as sa
# Import to no generate error in migrations
import sqlalchemy_utils
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bf24c444f7f6'
down_revision = '79229af6d3be'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comments_approval',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sqlalchemy_utils.types.uuid.UUIDType(), nullable=False),
    sa.Column('comment', sa.String(length=350), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.drop_table('databasechangelog', schema='db-test-bazar-auth')
    op.drop_table('databasechangeloglock', schema='db-test-bazar-auth')
    op.drop_table('company_products')
    op.add_column('products', sa.Column('company_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'products', 'companies', ['company_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_column('products', 'company_id')
    op.create_table('company_products',
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name='company_products_company_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='company_products_product_id_fkey'),
    sa.PrimaryKeyConstraint('company_id', 'product_id', name='company_products_pkey')
    )
    op.create_table('databasechangeloglock',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('locked', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('lockgranted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('lockedby', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='databasechangeloglock_pkey'),
    schema='db-test-bazar-auth'
    )
    op.create_table('databasechangelog',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('dateexecuted', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('orderexecuted', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('exectype', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('md5sum', sa.VARCHAR(length=35), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('comments', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('tag', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('liquibase', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('contexts', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('labels', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('deployment_id', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    schema='db-test-bazar-auth'
    )
    op.drop_table('comments_approval')
    # ### end Alembic commands ###
